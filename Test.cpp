#include "doctest.h"
#include "mat.hpp"
#include <string>
#include <algorithm>
#include <iostream>
using namespace ariel;


TEST_CASE("Good: small input") {
	CHECK(mat(1, 1, '1', '#') == "1");

	CHECK(mat(1, 7, '#', '!') == "#\n#\n#\n#\n#\n#\n#");

	CHECK(mat(7, 1, '#', '!') == "#######");

	CHECK(mat(5, 5, '#', '!') == "#####\n"
								 "#!!!#\n"
								 "#!#!#\n"
								 "#!!!#\n"
								 "#####");

	CHECK(mat(7, 5, '3', '5') == "3333333\n"
								 "3555553\n"
								 "3533353\n"
								 "3555553\n"
								 "3333333");

	CHECK(mat(9, 7, '@', '-') == "@@@@@@@@@\n"
								 "@-------@\n"
								 "@-@@@@@-@\n"
								 "@-@---@-@\n"
								 "@-@@@@@-@\n"
								 "@-------@\n"
								 "@@@@@@@@@");

	// same char
	CHECK(mat(9, 11, '4', '4') == "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444\n"
								  "444444444");
}
	

TEST_CASE("Good: large input") {

	CHECK(mat(23, 17, '#', '$') == "#######################\n"
								   "#$$$$$$$$$$$$$$$$$$$$$#\n"
								   "#$###################$#\n"
								   "#$#$$$$$$$$$$$$$$$$$#$#\n"
								   "#$#$###############$#$#\n"
								   "#$#$#$$$$$$$$$$$$$#$#$#\n"
								   "#$#$#$###########$#$#$#\n"
								   "#$#$#$#$$$$$$$$$#$#$#$#\n"
								   "#$#$#$#$#######$#$#$#$#\n"
								   "#$#$#$#$$$$$$$$$#$#$#$#\n"
								   "#$#$#$###########$#$#$#\n"
								   "#$#$#$$$$$$$$$$$$$#$#$#\n"
								   "#$#$###############$#$#\n"
								   "#$#$$$$$$$$$$$$$$$$$#$#\n"
								   "#$###################$#\n"
								   "#$$$$$$$$$$$$$$$$$$$$$#\n"
								   "#######################");

	CHECK(mat(29, 41, '%', '*') == "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n"
								   "%***************************%\n"
								   "%*%%%%%%%%%%%%%%%%%%%%%%%%%*%\n"
								   "%*%***********************%*%\n"
								   "%*%*%%%%%%%%%%%%%%%%%%%%%*%*%\n"
								   "%*%*%*******************%*%*%\n"
								   "%*%*%*%%%%%%%%%%%%%%%%%*%*%*%\n"
								   "%*%*%*%***************%*%*%*%\n"
								   "%*%*%*%*%%%%%%%%%%%%%*%*%*%*%\n"
								   "%*%*%*%*%***********%*%*%*%*%\n"
								   "%*%*%*%*%*%%%%%%%%%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*******%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%%%%%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%***%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%*%*%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%***%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*%%%%%*%*%*%*%*%*%\n"
								   "%*%*%*%*%*%*******%*%*%*%*%*%\n"
								   "%*%*%*%*%*%%%%%%%%%*%*%*%*%*%\n"
								   "%*%*%*%*%***********%*%*%*%*%\n"
								   "%*%*%*%*%%%%%%%%%%%%%*%*%*%*%\n"
								   "%*%*%*%***************%*%*%*%\n"
								   "%*%*%*%%%%%%%%%%%%%%%%%*%*%*%\n"
								   "%*%*%*******************%*%*%\n"
								   "%*%*%%%%%%%%%%%%%%%%%%%%%*%*%\n"
								   "%*%***********************%*%\n"
								   "%*%%%%%%%%%%%%%%%%%%%%%%%%%*%\n"
								   "%***************************%\n"
								   "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");

	CHECK(mat(53, 49, '#', '!') == "#####################################################\n"
								   "#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#\n"
								   "#!#################################################!#\n"
								   "#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#\n"
								   "#!#!#############################################!#!#\n"
								   "#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#\n"
								   "#!#!#!#########################################!#!#!#\n"
								   "#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#\n"
								   "#!#!#!#!#####################################!#!#!#!#\n"
								   "#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#\n"
								   "#!#!#!#!#!#################################!#!#!#!#!#\n"
								   "#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#############################!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#########################!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#####################!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#################!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!!!!!!!!!!!!!!!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#############!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#!!!!!!!!!!!#!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#!#########!#!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#!#!!!!!!!#!#!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#!#!#####!#!#!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#!#!!!!!!!#!#!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#!#########!#!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#!!!!!!!!!!!#!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!#############!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#!!!!!!!!!!!!!!!#!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!#################!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!#####################!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!#########################!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!#############################!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#!#\n"
								   "#!#!#!#!#!#################################!#!#!#!#!#\n"
								   "#!#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#!#\n"
								   "#!#!#!#!#####################################!#!#!#!#\n"
								   "#!#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#!#\n"
								   "#!#!#!#########################################!#!#!#\n"
								   "#!#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#!#\n"
								   "#!#!#############################################!#!#\n"
								   "#!#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#!#\n"
								   "#!#################################################!#\n"
								   "#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#\n"
								   "#####################################################");
}


TEST_CASE("Bad: even  input") {
	CHECK_THROWS(mat(10, 5, '$', '%'));

	CHECK_THROWS(mat(5, 4, '@', '-'));

	CHECK_THROWS(mat(2, 6, '@', '-'));

	CHECK_THROWS(mat(0, 12, '@', '-'));

	CHECK_THROWS(mat(12, 0, '@', '-'));

	CHECK_THROWS(mat(0, 3, '@', '-'));

	CHECK_THROWS(mat(3, 0, '@', '-'));

	CHECK_THROWS(mat(0, 0, '@', '-'));
}


TEST_CASE("Bad: negative  input") {
	CHECK_THROWS(mat(-5, 0, '@', '-'));

	CHECK_THROWS(mat(0, -5, '@', '-'));

	CHECK_THROWS(mat(2, -3, '@', '-'));

	CHECK_THROWS(mat(-2, -3, '@', '-'));

	CHECK_THROWS(mat(-2, 7, '@', '-'));
}

TEST_CASE("Bad: invalid characters") {
	CHECK_THROWS(mat(5, 1, ' ', ' '));

	CHECK_THROWS(mat(5, 1, '\r', '\r'));

	CHECK_THROWS(mat(5, 1, '\n', '-'));

	CHECK_THROWS(mat(1, 5, '@', '\t'));
}